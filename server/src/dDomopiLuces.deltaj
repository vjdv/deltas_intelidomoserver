delta dDomopiLuces {
	adds{
		package modelos.domopi;
		import intelidomo.estatico.Constantes;
		import modelos.Luz;
		import java.util.logging.*;
		public class LuzImp extends Luz{
			private final Domopi padre;
			private final char cid;
			public LuzImp(Domopi drpi, char id){
				setControlador(drpi);
				padre = drpi;
				cid = id;
			}
			//@Override
			public String getEstadosLuz(){
				return Constantes.ON_OFF;
			}
			public char getIdChar(){ return cid; }
			@Override
			public void triggerEstado(String edo){
				if(edo.equals(Constantes.ON)) encender();
				else if(edo.equals(Constantes.OFF)) apagar();
				else Logger.getLogger("DomoLog").log(Level.INFO,"Estado "+edo+" para Luz "+cid+" no v√°lido en " + padre.getIP());
			}
			@Override
			public void encender(){
				padre.enviarComando("SET LUZ"+cid+" ON");
			}
			@Override
			public void apagar(){
				padre.enviarComando("SET LUZ"+cid+" OFF");
			}
		}
	}
	modifies modelos.domopi.Domopi{
		adds Map<Character,LuzImp> mapa_luces = new HashMap<Character,LuzImp>();
		modifies entenderPedazo(String key,String val){
			if(key.startsWith("LUZ")) {
				Character id = key.charAt(3);
				LuzImp luz = mapa_luces.get(id);
				if(luz==null){
					luz = new LuzImp(this,id);
					mapa_luces.put(id,luz);
					Casa.getInstancia().registrarLuz(luz);
					//Casa.getInstancia().getArea(getArea()).agregarLuz(luz);
				}
				String x = val.equals("ON") ? "1" : "0";
				luz.setEstado(x);
			}
			original(key,val);
		}
	}
}