delta dRules {
	modifies aplicacion.Inicio{
		adds import modelos.rules.Fabrica;
		modifies constructor(){
			original();
			new Fabrica();
		}
	}
	adds{
		package modelos.rules;
		import modelos.Dispositivo;
		import javax.swing.Timer;
		import java.util.*;
		public class Fabrica{
			private Map<Dispositivo,Regla> rules_map = new HashMap<Dispositivo,Regla>();
			private List<Regla> rules_timer = new ArrayList<Regla>();
			public static int curHora = -1, curMinuto = -1, curSegundo = -1;
			public Fabrica(){
				java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent actionEvent) {
						Calendar calendar = Calendar.getInstance();
						curHora = calendar.get(Calendar.HOUR_OF_DAY);
						curMinuto = calendar.get(Calendar.MINUTE);
						curSegundo = calendar.get(Calendar.SECOND);
						if(curSegundo==0) for(Regla r : rules_timer){
							if(r.evaluar()==true) r.ejecutar();
						}
//						System.out.println("TIME: ");
					}
				};
				Timer timer = new Timer(999,actionListener);
				timer.start();
			}
		}
	}
	adds{
		package modelos.rules;
		public abstract class Regla{
			abstract boolean evaluar();
			abstract void ejecutar();
		}
	}
	adds{
		package modelos.rules;
		public abstract class ReglaHora extends Regla{
			private int hora = 0, minuto = 0;
			public boolean evaluar(){
				return (Fabrica.curHora==hora && Fabrica.curMinuto==minuto);
			}
			public void setHora(int x){hora=x;}
			public int getHora(){return hora;}
			public void setMinuto(int x){minuto=x;}
			public int getMinuto(){return minuto;}
		}
	}
}